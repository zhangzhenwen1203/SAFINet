# YOLOv9

# parameters
nc: 80  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# YOLOv9 backbone
backbone:
  [
    [ -1, 1, Silence, [ ] ],
    [ -1, 1, Conv, [ 16, 3, 2 ] ],  # 1-P1/2
    [ -1, 1, Conv, [ 32, 3, 2 ] ],  # 2-P2/4
    [ -1, 1, RepNCSPELAN4, [ 64, 32, 16, 1 ] ],  # 3
    [ -1, 1, Conv, [ 64, 3, 2 ] ],  # 4-P3/8
    [ -1, 1, RepNCSPELAN4, [ 128, 64, 32, 1 ] ],  # 5
    [ -1, 1, Conv, [ 128, 3, 2 ] ],  # 6-P4/16
    [ -1, 1, RepNCSPELAN4, [ 128, 128, 64, 1 ] ],  # 7
    [ -1, 1, Conv, [ 128, 3, 2 ] ],  # 8-P5/32
    [ -1, 1, RepNCSPELAN4, [ 128, 128, 64, 1 ] ],  # 9
  ]

# YOLOv9 head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [128, 256]],  # 10
   [ 5, 1, Conv, [ 64 ] ],  # 11
   [ 7, 1, Conv, [ 64 ] ],  # 12
   [ 10, 1, Conv, [ 64 ] ],  # 13

   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], # 14 P5->P4
   [ [ -1, 12 ], 1, CIFPN, [ ] ], # 15
   [ -1, 1, RepNCSPELAN4, [64, 64, 32, 1]], # 16 (T1/8-small)

   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ], # 17 P4->P3
   [ [ -1, 11 ], 1, CIFPN, [ ] ], # 18
   [ -1, 1, RepNCSPELAN4, [64, 64, 32, 1]], # 19 (T2/8-small)

   [ 3, 1, Conv, [ 64, 3, 2 ] ], # 20
   [ [ -1, 11, 19 ], 1, CIFPN, [ ] ], # 21
   [ -1, 1, RepNCSPELAN4, [64, 64, 32, 1]], # 22 (T3/8-small)

   [ -1, 1, Conv, [ 64, 3, 2 ] ], # 23
   [ [ -1, 12, 16 ], 1, CIFPN, [ ] ], # 24
   [-1, 1, RepNCSPELAN4, [128, 128, 64, 1] ], # 25 (T4/16-medium)

   [ -1, 1, Conv, [ 64, 3, 2 ] ], # 26 P4->P5
   [ [ -1, 13 ], 1, CIFPN, [ ] ], # 27
   [-1, 1, RepNCSPELAN4, [128, 128, 64, 1]], # 28 (T5/32-large)

   # routing +6
   [5, 1, CBLinear, [[64]]], # 29
   [7, 1, CBLinear, [[64, 128]]], # 30
   [9, 1, CBLinear, [[64, 128, 128]]], # 31

   # conv down
   [0, 1, Conv, [16, 3, 2]],  # 32-P1/2
   [-1, 1, Conv, [32, 3, 2]],  # 33-P2/4
   [-1, 1, RepNCSPELAN4, [64, 32, 16, 1]],  # 34
   [-1, 1, Conv, [64, 3, 2]],  # 35-P3/8
   [[29, 30, 31, -1], 1, CBFuse, [[0, 0, 0]]], # 36
   [-1, 1, RepNCSPELAN4, [128, 64, 32, 1]],  # 37
   [-1, 1, Conv, [128, 3, 2]],  # 38-P4/16
   [[30, 31, -1], 1, CBFuse, [[1, 1]]], # 39
   [-1, 1, RepNCSPELAN4, [128, 128, 64, 1]],  # 40
   [-1, 1, Conv, [128, 3, 2]],  # 41-P5/32
   [[31, -1], 1, CBFuse, [[2]]], # 42
   [-1, 1, RepNCSPELAN4, [128, 128, 64, 1]],  # 43
   # detect
   [[37, 40, 43, 22, 25, 28], 1, DualDDetect, [nc]],  # DualDDetect(A3, A4, A5, P3, P4, P5)
  ]